//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using System;
using UnityEngine;

namespace SheepDemoUnitTests
{
	class FakeGridObject : IGridObject
	{
		IIsoGrid _grid; 
		bool _visible = true;
		Vector3 _pos;
		
		public IIsoGrid Grid { get{ return _grid; } set{ _grid = value;} }
		public Vector3 Pos { get{ return _pos; } set{ _pos = value;} }
		public Vector3 GridPos { get{ return _pos; }}
		public void SnapToGrid() { _pos = Vector3.zero; }
		public void SetViewRotation(Vector3? center, Vector3 axis, float angle) {}
		public void SnapToAxis() {}
		public T GetProperty<T> () { return default(T); }
		
		public void SetVisible(bool visible) { _visible = visible; }
		public void SetActive(bool visible) { }
		public bool IsVisible() { return _visible;}
		public string GetName() { return "FakeGridObject"; }
	}

	[TestFixture]
	public class IsoGridTest
	{
		IsoGrid _grid;

		[SetUp]
		public void CreateGrid()
		{
			_grid = new GameObject("IsoGrid").AddComponent<IsoGrid>();
		}

		[TearDown]
		public void DestroyGrid()
		{
			GameObject.DestroyImmediate(_grid.gameObject);
		}

		[Test]
		public void Test_SetToCellVisible_GetFromCell_Equal()
		{
			FakeGridObject setGo = new FakeGridObject();
			setGo.SetVisible(true);
			_grid.SetToCell(Vector3.one*3, setGo);
			FakeGridObject getGo = _grid.GetFromCell(Vector3.one*3) as FakeGridObject;
			Assert.AreEqual(setGo, getGo);
		}

		[Test]
		public void Test_SetToCellNotVisible_GetFromCell_Null()
		{
			FakeGridObject setGo = new FakeGridObject();
			setGo.SetVisible(false);
			_grid.SetToCell(Vector3.one*3, setGo);
			FakeGridObject getGo = _grid.GetFromCell(Vector3.one*3) as FakeGridObject;
			Assert.IsNull(getGo);
		}
	}

	[TestFixture]
	public class TileTest
	{
		public class FakeTile: Tile
		{
			public IGridObject[] objects;
			protected override IGridObject[] GetGridObjects()
			{
				return objects;
			}
		}

		[Test]
		public void Test_AppearGridObjectsWithOffset_AreVisible()
		{
			FakeGridObject setGo = new FakeGridObject();
			setGo.SetVisible (false);
			FakeTile tile = new FakeTile ();
			tile.objects = new IGridObject[]{setGo};
			tile.AppearGridObjectsWithOffset(Vector3.zero);
			Assert.IsTrue (setGo.IsVisible ());
		}

		[Test]
		public void Test_AppearGridObjectsWithOffset_HasGridPos_Ofsetted()
		{
			FakeGridObject setGo = new FakeGridObject();
			Vector3 pos = Vector3.one * 4;
			Vector3 offset = Vector3.one * 20;
			setGo.Pos = pos;
			FakeTile tile = new FakeTile ();
			tile.objects = new IGridObject[]{setGo};
			tile.AppearGridObjectsWithOffset(offset);
			Assert.AreEqual (setGo.GridPos, pos+offset);
		}
	}
}

